# -*- coding: utf-8 -*-
# Generated by Django 1.11.25 on 2019-11-01 18:36
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [('accession', '0001_initial'), ('accession', '0002_auto_20191031_2139'), ('accession', '0003_auto_20191101_1625')]

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Accession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accession_number', models.CharField(max_length=12, unique=True)),
                ('date_received', models.DateField(blank=True, null=True)),
                ('description', models.TextField(help_text=b'Publicly viewable description of the accession')),
                ('date_in_computer', models.DateField(blank=True, null=True)),
                ('acquisition_method', models.CharField(choices=[(b'GIK', b'Gift In Kind'), (b'TRN', b'Transfer'), (b'PUR', b'Purchase'), (b'OTH', b'Other')], default=b'GIK', max_length=3)),
                ('anonymous_accession', models.BooleanField(help_text=b'Check if accession should be listed as anonymous on any public interface')),
                ('date_paperwork_sent', models.DateField(blank=True, help_text=b'Date recipt of gift (ROG) was mailed out', null=True)),
                ('date_paperwork_returned', models.DateField(blank=True, help_text=b'Date signed recipt of gift (ROG) was received', null=True)),
                ('accession_note', models.TextField(blank=True, help_text=b'Private note related to this accession')),
            ],
            options={
                'ordering': ['accession_number'],
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'ordering': ['city'],
                'verbose_name_plural': 'Cities',
            },
        ),
        migrations.CreateModel(
            name='Classification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classification', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'ordering': ['classification'],
            },
        ),
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'ordering': ['condition'],
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['country'],
                'verbose_name_plural': 'Countries',
            },
        ),
        migrations.CreateModel(
            name='Designer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designer', models.CharField(max_length=200)),
            ],
            options={
                'ordering': ['designer'],
            },
        ),
        migrations.CreateModel(
            name='Donor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salutation', models.CharField(blank=True, choices=[('MR', 'Mr.'), ('MRS', 'Mrs.'), ('MISS', 'Miss'), ('MS', 'Ms.'), ('MRMRS', 'Mr. and Mrs.'), ('DR', 'Dr.')], max_length=5)),
                ('first_name', models.CharField(blank=True, max_length=100)),
                ('middle_name', models.CharField(blank=True, max_length=100)),
                ('last_name', models.CharField(blank=True, max_length=100)),
                ('organization_name', models.CharField(blank=True, max_length=255)),
                ('donor_type', models.CharField(blank=True, choices=[('PER', 'Person'), ('ORG', 'Organization')], default='PER', max_length=3)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('address_1', models.CharField(blank=True, max_length=100)),
                ('address_2', models.CharField(blank=True, max_length=100)),
                ('state', models.CharField(blank=True, choices=[('AL', 'Alabama'), ('AK', 'Alaska'), ('AS', 'American Samoa'), ('AZ', 'Arizona'), ('AR', 'Arkansas'), ('AA', 'Armed Forces Americas'), ('AE', 'Armed Forces Europe'), ('AP', 'Armed Forces Pacific'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DE', 'Delaware'), ('DC', 'District of Columbia'), ('FL', 'Florida'), ('GA', 'Georgia'), ('GU', 'Guam'), ('HI', 'Hawaii'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('ME', 'Maine'), ('MD', 'Maryland'), ('MA', 'Massachusetts'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MT', 'Montana'), ('NE', 'Nebraska'), ('NV', 'Nevada'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NY', 'New York'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('MP', 'Northern Mariana Islands'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('PR', 'Puerto Rico'), ('RI', 'Rhode Island'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('UT', 'Utah'), ('VT', 'Vermont'), ('VI', 'Virgin Islands'), ('VA', 'Virginia'), ('WA', 'Washington'), ('WV', 'West Virginia'), ('WI', 'Wisconsin'), ('WY', 'Wyoming')], max_length=2)),
                ('postal_code', models.CharField(blank=True, max_length=15)),
                ('phone_number_1', models.CharField(blank=True, help_text='Please use the following format: <em>(940) 391-0414</em>.', max_length=25)),
                ('phone_number_2', models.CharField(blank=True, help_text='Please use the following format: <em>(940) 391-0414</em>.', max_length=25)),
                ('email_address', models.EmailField(blank=True, max_length=254)),
                ('comments', models.TextField(blank=True)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accession.City')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accession.Country')),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=200, verbose_name=b'Designer Label')),
            ],
            options={
                'ordering': ['label'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=200)),
            ],
            options={
                'ordering': ['location'],
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material', models.CharField(max_length=200)),
            ],
            options={
                'ordering': ['material'],
            },
        ),
        migrations.CreateModel(
            name='Measurement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measurement', models.CharField(max_length=200)),
            ],
            options={
                'ordering': ['measurement'],
            },
        ),
        migrations.CreateModel(
            name='Object',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_number', models.CharField(max_length=20)),
                ('object_description', models.TextField()),
                ('related_objects', models.CharField(blank=True, max_length=200)),
                ('original_numbers', models.CharField(blank=True, max_length=100)),
                ('date_object_creation', models.CharField(blank=True, max_length=100)),
                ('object_era', models.CharField(blank=True, choices=[(b'Pre-1770', b'Pre-1770'), (b'1770-1779', b'1770-1779'), (b'1780-1789', b'1780-1789'), (b'1790-1799', b'1790-1799'), (b'1800-1809', b'1800-1809'), (b'1810-1819', b'1810-1819'), (b'1820-1829', b'1820-1829'), (b'1830-1839', b'1830-1839'), (b'1840-1849', b'1840-1849'), (b'1850-1859', b'1850-1859'), (b'1860-1869', b'1860-1869'), (b'1870-1879', b'1870-1879'), (b'1880-1889', b'1880-1889'), (b'1890-1899', b'1890-1899'), (b'1900-1909', b'1900-1909'), (b'1910-1919', b'1910-1919'), (b'1920-1929', b'1920-1929'), (b'1930-1939', b'1930-1939'), (b'1940-1949', b'1940-1949'), (b'1950-1959', b'1950-1959'), (b'1960-1969', b'1960-1969'), (b'1970-1979', b'1970-1979'), (b'1980-1989', b'1980-1989'), (b'1990-1999', b'1990-1999'), (b'2000-2009', b'2000-2009'), (b'2010-2019', b'2010-2019')], max_length=10)),
                ('remarks', models.TextField(blank=True)),
                ('location_remarks', models.TextField(blank=True)),
                ('construction', models.TextField(blank=True)),
                ('exhibitions', models.TextField(blank=True)),
                ('publications', models.TextField(blank=True)),
                ('provenance', models.TextField(blank=True)),
                ('condition_statement', models.TextField(blank=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('public_notes', models.TextField(blank=True)),
                ('gender', models.CharField(choices=[(b'M', b'Male'), (b'F', b'Female'), (b'U', b'Unisex'), (b'UnKn', b'Gender Unknown'), (b'UnRec', b'Not Recorded'), (b'NA', b'Not Applicable')], max_length=14)),
                ('date_record_added', models.DateTimeField(auto_now_add=True)),
                ('date_record_last_edited', models.DateTimeField(auto_now=True)),
                ('accession_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accession.Accession')),
                ('classification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accession.Classification')),
                ('condition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accession.Condition')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accession.Country')),
                ('designer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accession.Designer')),
                ('label', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accession.Label', verbose_name=b'Designer Label')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accession.Location')),
                ('material', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accession.Material')),
                ('measurement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accession.Measurement')),
            ],
        ),
        migrations.CreateModel(
            name='Part',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'ordering': ['part'],
            },
        ),
        migrations.CreateModel(
            name='Retailer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('retailer_name', models.CharField(max_length=200, unique=True)),
            ],
            options={
                'ordering': ['retailer_name'],
            },
        ),
        migrations.CreateModel(
            name='Retailer_Label',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('retailer_label', models.CharField(max_length=200, unique=True, verbose_name='Retailer Label')),
            ],
            options={
                'ordering': ['retailer_label'],
                'verbose_name_plural': 'Retailer Labels',
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_type', models.CharField(max_length=200)),
            ],
            options={
                'ordering': ['object_type'],
            },
        ),
        migrations.AddField(
            model_name='object',
            name='parts',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accession.Part'),
        ),
        migrations.AddField(
            model_name='object',
            name='retailer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accession.Retailer'),
        ),
        migrations.AddField(
            model_name='object',
            name='retailer_label',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accession.Retailer_Label', verbose_name='Retailer Label'),
        ),
        migrations.AddField(
            model_name='object',
            name='type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accession.Type'),
        ),
        migrations.AddField(
            model_name='accession',
            name='donor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accession.Donor'),
        ),
        migrations.AlterField(
            model_name='accession',
            name='accession_note',
            field=models.TextField(blank=True, help_text='Private note related to this accession'),
        ),
        migrations.AlterField(
            model_name='accession',
            name='acquisition_method',
            field=models.CharField(choices=[('GIK', 'Gift In Kind'), ('TRN', 'Transfer'), ('PUR', 'Purchase'), ('OTH', 'Other')], default='GIK', max_length=3),
        ),
        migrations.AlterField(
            model_name='accession',
            name='anonymous_accession',
            field=models.BooleanField(help_text='Check if accession should be listed as anonymous on any public interface'),
        ),
        migrations.AlterField(
            model_name='accession',
            name='date_paperwork_returned',
            field=models.DateField(blank=True, help_text='Date signed recipt of gift (ROG) was received', null=True),
        ),
        migrations.AlterField(
            model_name='accession',
            name='date_paperwork_sent',
            field=models.DateField(blank=True, help_text='Date recipt of gift (ROG) was mailed out', null=True),
        ),
        migrations.AlterField(
            model_name='accession',
            name='description',
            field=models.TextField(help_text='Publicly viewable description of the accession'),
        ),
        migrations.AlterField(
            model_name='label',
            name='label',
            field=models.CharField(max_length=200, verbose_name='Designer Label'),
        ),
        migrations.AlterField(
            model_name='object',
            name='gender',
            field=models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('U', 'Unisex'), ('UnKn', 'Gender Unknown'), ('UnRec', 'Not Recorded'), ('NA', 'Not Applicable')], max_length=14),
        ),
        migrations.AlterField(
            model_name='object',
            name='label',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accession.Label', verbose_name='Designer Label'),
        ),
        migrations.AlterField(
            model_name='object',
            name='object_era',
            field=models.CharField(blank=True, choices=[('Pre-1770', 'Pre-1770'), ('1770-1779', '1770-1779'), ('1780-1789', '1780-1789'), ('1790-1799', '1790-1799'), ('1800-1809', '1800-1809'), ('1810-1819', '1810-1819'), ('1820-1829', '1820-1829'), ('1830-1839', '1830-1839'), ('1840-1849', '1840-1849'), ('1850-1859', '1850-1859'), ('1860-1869', '1860-1869'), ('1870-1879', '1870-1879'), ('1880-1889', '1880-1889'), ('1890-1899', '1890-1899'), ('1900-1909', '1900-1909'), ('1910-1919', '1910-1919'), ('1920-1929', '1920-1929'), ('1930-1939', '1930-1939'), ('1940-1949', '1940-1949'), ('1950-1959', '1950-1959'), ('1960-1969', '1960-1969'), ('1970-1979', '1970-1979'), ('1980-1989', '1980-1989'), ('1990-1999', '1990-1999'), ('2000-2009', '2000-2009'), ('2010-2019', '2010-2019')], max_length=10),
        ),
        migrations.AlterField(
            model_name='object',
            name='object_era',
            field=models.CharField(blank=True, choices=[('Pre-1770', 'Pre-1770'), ('1770-1779', '1770-1779'), ('1780-1789', '1780-1789'), ('1790-1799', '1790-1799'), ('1800-1809', '1800-1809'), ('1810-1819', '1810-1819'), ('1820-1829', '1820-1829'), ('1830-1839', '1830-1839'), ('1840-1849', '1840-1849'), ('1850-1859', '1850-1859'), ('1860-1869', '1860-1869'), ('1870-1879', '1870-1879'), ('1880-1889', '1880-1889'), ('1890-1899', '1890-1899'), ('1900-1909', '1900-1909'), ('1910-1919', '1910-1919'), ('1920-1929', '1920-1929'), ('1930-1939', '1930-1939'), ('1940-1949', '1940-1949'), ('1950-1959', '1950-1959'), ('1960-1969', '1960-1969'), ('1970-1979', '1970-1979'), ('1980-1989', '1980-1989'), ('1990-1999', '1990-1999'), ('2000-2009', '2000-2009'), ('2010-2019', '2010-2019'), ('2020-2029', '2020-2029')], max_length=10),
        ),
    ]
